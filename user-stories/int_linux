
User Stories for the Linux hooks to add and extract telemetry metadata within the Linux kernel space.

  * Outgoing packets should be expanded with an INT header specified in the INT Spec v1.0.
  * Outgoing packets should be expanded with an INT header only when the remote node is a Q-Factor node
  * Outgoing packets should be expanded with an INT header at the lowest point within the Linux network stack
  * Outgoing packets when TCP with TCP Options are present, should add INT header between the TCP standard header and the TCP Options
  * Outgoing packets will increase in 12 bytes, MTU needs to be mapped in advance to avoid drops
  * Outgoing packets should be expanded with an INT header using Traffic Control (tc) available via iproute2
  * Outgoing packets should be expanded with an INT header leveraging eBPF calls
  * Outgoing packets should be marked with DSCP code AF17 following the INT Spec v1.0

  * Incoming packets with an INT header should have the INT metadata extracted at the lowest point within the Linux network stack
  * Incoming packets with an INT header should have the INT metadata extracted using eXpress Data Path (xdp)
  * Incoming packets with an INT header should have the INT metadata pre-processed looking for possible anomalies to save context switching costs. The output of the pre-processing will be the telemetry summaries.
  * All telemetry summaries should be pushed to the Telemetry Agent via eBPF maps, eBPF PERF calls, or a new packet (for Remote Telemetry Agents)

Challenges:

  * In INT-enabled networks, INT sinks can't extract the telemetry metadata from Q-Factor flows
  * Only communication between Q-Factor nodes should have INT headers added